Chapter2 Type, Operation and Expressions
2.1 Basic C Data Types
2.1.4 char
The char type is used for storing characters such as letters and punctuation marks, but technically
it is an integer type. Why? Because the char type actually stores integers, not characters.
To handle characters, the computer uses a numerical code in which certain integers represent
certain characters. The most commonly used code in the U.S. is the ASCII code given in the
table on the inside front cover. It is the code this book assumes. In it, for example, the integer
value 65 represents an uppercase A . So to store the letter A , you actually need to store the
integer 65 . (Many IBM mainframes use a different code, called EBCDIC, but the principle is the
same. Computer systems outside the U.S. may use entirely different codes.)
The standard ASCII code runs numerically from 0 to 127. This range is small enough that 7 bits
can hold it. The char type is typically defined as an 8-bit unit of memory, so it is more than
large enough to encompass the standard ASCII code. Many systems, such as the IBM PC and
the Apple Macs, offer extended ASCII codes (different for the two systems) that still stay within
an 8-bit limit. More generally, C guarantees that the char type is large enough to store the
basic character set for the system on which C is implemented.
